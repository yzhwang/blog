<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>   
    <title>Juan Olvera</title>
    <atom:link href="http://juanolvera.com/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://juanolvera.com</link>
    <description>code &amp; personal thoughts</description>
    <pubDate>Fri, 20 Apr 2012 12:00:00 -0500</pubDate>
    <generator>The mighty Wintersmith</generator>
    <language>en</language>
    <item>
      <title>Micro Grid</title>
      <link>http://juanolvera.com/articles/micro-grid/</link>
      <pubDate>Fri, 20 Apr 2012 12:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://juanolvera.com/articles/micro-grid/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;em&gt;A Tiny 12 column fluid grid generator. &lt;a href=&quot;http://github.com/thinkxl/micro-grid&quot;&gt;Source-code&lt;/a&gt; and &lt;a href=&quot;http://thinkxl.github.io/micro-grid/&quot;&gt;live demo&lt;/a&gt;&lt;/em&gt;

&lt;/p&gt;
&lt;p&gt;Recently, one of my favorite tools &lt;a href=&quot;http://andytaylor.me/2013/04/09/1140px-css-grid-retired/&quot;&gt;cssgrid&lt;/a&gt; was deprecated, an excellent fluid grid, so I decided to make my own... with &lt;a href=&quot;http://lesscss.org&quot;&gt;less&lt;/a&gt; btw.

&lt;/p&gt;
&lt;p&gt;But first I wanted to solve some problems or things I dislike from grids.

&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fixed size of gutter.&lt;/li&gt;
&lt;li&gt;I don&apos;t use all the columns on every project, and delete code for each one is not an option.&lt;/li&gt;
&lt;li&gt;A lot of code for a simple need, (cssgrid solved this very well).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The result project is &lt;strong&gt;&lt;a href=&quot;http://github.com/thinkxl/micro-grid&quot;&gt;micro-grid.less&lt;/a&gt;&lt;/strong&gt;, that is not a grid itself, is a function that can generate a customized one automatically, just entering the number of columns I need, for example:

&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;@import &lt;span class=&quot;string&quot;&gt;'micro-grid'&lt;/span&gt;;
@gutter: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;%; &lt;span class=&quot;comment&quot;&gt;/* set our gutter size, 1% by default */&lt;/span&gt;

.cols(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;/* equal to a 100% width */&lt;/span&gt;
.cols(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;/* this one 50% and so on... */&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now I&apos;m able to build a grid with only the columns I need on a certain project.

&lt;/p&gt;
&lt;p&gt;For example if I need to make a layout with 3 columns:

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;less&lt;/strong&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;@import &lt;span class=&quot;string&quot;&gt;'micro-grid'&lt;/span&gt;;

&lt;span class=&quot;comment&quot;&gt;/* container */&lt;/span&gt;
.main {
    max-width: &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;em;
    margin: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; auto;
    padding: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;em;
}

&lt;span class=&quot;comment&quot;&gt;/* one of three columns, 12/3 = 4 */&lt;/span&gt;
.col-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; { .grids(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;); }&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;markup&lt;/strong&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;xml&quot;&gt;&lt;div &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt;&gt;
    &lt;div &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;grid&quot;&lt;/span&gt;&gt;
        &lt;div &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;col-1-3&quot;&lt;/span&gt;&gt;
            &lt;p&gt; lorem ipsum &lt;/p&gt;
        &lt;/div&gt;

        &lt;div &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;col-1-3&quot;&lt;/span&gt;&gt;
            &lt;p&gt; lorem ipsum &lt;/p&gt;
        &lt;/div&gt;

        &lt;div &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;col-1-3 last&quot;&lt;/span&gt;&gt;
            &lt;p&gt; lorem ipsum &lt;/p&gt;
        &lt;/div&gt; &lt;!-- note that we add last to our last div --&gt;
    &lt;/div&gt; &lt;!-- end of grid --&gt;
&lt;/div&gt; &lt;!-- end of main --&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And that&apos;s all!, I don&apos;t have to worry about ugly % calculations anymore, just trust my less function.

&lt;/p&gt;
&lt;p&gt;I just compile the columns that I need, the &lt;strong&gt;micro-grid.less&lt;/strong&gt; file is &lt;strong&gt;0.334 kb uncompressed&lt;/strong&gt; so is a powerful tool on a very good size.

&lt;/p&gt;
&lt;p&gt;You can download the source-code and view full documentation on &lt;a href=&quot;https://github.com/thinkxl/micro-grid&quot;&gt;GitHub&lt;/a&gt; and check the live &lt;a href=&quot;http://thinkxl.github.io/micro-grid/&quot;&gt;demo&lt;/a&gt;.

&lt;/p&gt;
&lt;p&gt;Happy coding!&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>